import{_ as l,o as u,c as i,a as n,d as t,b as a,r as p}from"./app.d4c08878.js";const k={},r=t(`<h1 id="_4-\u521B\u5EFA\u578B\u6A21\u5F0F-\u5355\u4F8B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-\u521B\u5EFA\u578B\u6A21\u5F0F-\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> 4.\u521B\u5EFA\u578B\u6A21\u5F0F-\u5355\u4F8B\u6A21\u5F0F</h1><h2 id="_4-1-\u7AE0\u8282\u5185\u5BB9\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_4-1-\u7AE0\u8282\u5185\u5BB9\u6982\u8FF0" aria-hidden="true">#</a> 4.1.\u7AE0\u8282\u5185\u5BB9\u6982\u8FF0</h2><pre><code>\u672C\u7AE0\u8282\u6D89\u53CA\u4E3B\u8981\u5185\u5BB9\u6709\uFF1A
 4.1.\u7AE0\u8282\u5185\u5BB9\u6982\u8FF0
 4.2.\u7AE0\u8282\u5185\u5BB9\u5927\u7EB2
 4.3.\u7B80\u4ECB
 4.4.\u5E94\u7528\u573A\u666F
 4.5.\u4F18\u7F3A\u70B9
 4.6.\u89D2\u8272\u53CA\u5176\u804C\u8D23
 4.7.\u6A21\u578B
 4.8.\u793A\u4F8B
 4.9.\u5728\u5F00\u6E90\u6846\u67B6\u4E2D\u7684\u5E94\u7528
\u5177\u4F53\u6BCF\u4E2A\u5C0F\u8282\u4E2D\u5305\u542B\u7684\u5185\u5BB9\u53EF\u4F7F\u901A\u8FC7\u4E0B\u9762\u7684\u7AE0\u8282\u5185\u5BB9\u5927\u7EB2\u8FDB\u884C\u67E5\u770B\u3002
</code></pre><h2 id="_4-2-\u7AE0\u8282\u5185\u5BB9\u5927\u7EB2" tabindex="-1"><a class="header-anchor" href="#_4-2-\u7AE0\u8282\u5185\u5BB9\u5927\u7EB2" aria-hidden="true">#</a> <a href="/enhance/markmap/general/designpattern/designpattern-java/chapter/designpattern-java-outline5-chapter4.html" target="_blank">4.2.\u7AE0\u8282\u5185\u5BB9\u5927\u7EB2</a></h2>`,4),d=t(`<h2 id="_4-3-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_4-3-\u7B80\u4ECB" aria-hidden="true">#</a> 4.3.\u7B80\u4ECB</h2><pre><code>\u5355\u4F8B\u6A21\u5F0F(Singleton Pattern)\u662F\u4E00\u79CD\u521B\u5EFA\u578B\u8BBE\u8BA1\u6A21\u5F0F,\u53C8\u540D\u5355\u4EF6\u6A21\u5F0F\u6216\u5355\u6001\u6A21\u5F0F,\u76EE\u7684\u662F\u4E3A\u4E86\u4FDD\u8BC1\u4E00\u4E2A\u7C7B\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61,\u5E76\u63D0\u4F9B\u4E00\u4E2A\u83B7\u53D6\u8BE5\u5B9E\u4F8B\u5BF9\u8C61\u7684\u5168\u5C40\u65B9\u6CD5,\u901A\u8FC7\u8FD9\u4E2A\u5168\u5C40\u65B9\u6CD5\u521B\u5EFA\u7684\u6240\u6709\u5B9E\u4F8B\u5BF9\u8C61\u90FD\u662F\u540C\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61,\u8FD9\u4E2A\u7C7B\u79F0\u4E3A\u5355\u4F8B\u7C7B\u3002\u5355\u4F8B\u6A21\u5F0F\u7684\u8981\u70B9\u6709\u4E09\u4E2A:\u4E00\u662F\u67D0\u4E2A\u7C7B\u53EA\u80FD\u6709\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61;\u4E8C\u662F\u8FD9\u4E2A\u7C7B\u5FC5\u987B\u81EA\u884C\u521B\u5EFA\u8FD9\u4E2A\u5B9E\u4F8B\u5BF9\u8C61;\u4E09\u662F\u8FD9\u4E2A\u7C7B\u5FC5\u987B\u81EA\u884C\u5411\u6574\u4E2A\u7CFB\u7EDF\u63D0\u4F9B\u8FD9\u4E2A\u5B9E\u4F8B\u3002
</code></pre><h2 id="_4-4-\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_4-4-\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> 4.4.\u5E94\u7528\u573A\u666F</h2><pre><code>\u5355\u4F8B\u6A21\u5F0F\u5E94\u7528\u7684\u573A\u666F\u4E00\u822C\u53D1\u73B0\u5728\u4EE5\u4E0B\u6761\u4EF6\u4E0B
\u8D44\u6E90\u5171\u4EAB\u7684\u60C5\u51B5\u4E0B: \u907F\u514D\u7531\u4E8E\u8D44\u6E90\u64CD\u4F5C\u65F6\u5BFC\u81F4\u7684\u6027\u80FD\u6216\u635F\u8017\u7B49
\u63A7\u5236\u8D44\u6E90\u7684\u60C5\u51B5\u4E0B: \u65B9\u4FBF\u8D44\u6E90\u4E4B\u95F4\u7684\u4E92\u76F8\u901A\u4FE1

\u5177\u4F53\u5E94\u7528\u573A\u666F
a.Windows\u7684Task Manager(\u4EFB\u52A1\u7BA1\u7406\u5668),\u5728\u4E00\u4E2AWindows\u7CFB\u7EDF\u4E2D\u53EA\u6709\u4E00\u4E2ATask Manager\u5B9E\u4F8B
b.Windows\u7684Recycle Bin(\u56DE\u6536\u7AD9),\u5728\u4E00\u4E2AWindows\u7CFB\u7EDF\u4E2D\u53EA\u6709\u4E00\u4E2ARecycle Bin\u5B9E\u4F8B
c.\u7F51\u7AD9\u7684\u8BA1\u6570\u5668,\u4E00\u822C\u4E5F\u662F\u91C7\u7528\u5355\u4F8B\u6A21\u5F0F\u5B9E\u73B0,\u5426\u5219\u96BE\u4EE5\u540C\u6B65
d.\u5E94\u7528\u7A0B\u5E8F\u7684\u65E5\u5FD7\u5E94\u7528,\u4E00\u822C\u90FD\u4F55\u7528\u5355\u4F8B\u6A21\u5F0F\u5B9E\u73B0,\u8FD9\u4E00\u822C\u662F\u7531\u4E8E\u5171\u4EAB\u7684\u65E5\u5FD7\u6587\u4EF6\u4E00\u76F4\u5904\u4E8E\u6253\u5F00\u72B6\u6001,\u56E0\u4E3A\u53EA\u80FD\u6709\u4E00\u4E2A\u5B9E\u4F8B\u53BB\u64CD\u4F5C,\u5426\u5219\u65E0\u6CD5\u5B9E\u73B0\u5185\u5BB9\u8FFD\u52A0
e.\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u7684\u8BBE\u8BA1\u4E00\u822C\u4E5F\u662F\u91C7\u7528\u5355\u4F8B\u6A21\u5F0F,\u56E0\u4E3A\u6570\u636E\u5E93\u8FDE\u63A5\u662F\u4E00\u79CD\u6570\u636E\u5E93\u8D44\u6E90\u3002\u6570\u636E\u5E93\u8F6F\u4EF6\u7CFB\u7EDF\u4E2D\u4F7F\u7528\u6570\u636E\u5E93\u8FDE\u63A5\u6C60,\u4E3B\u8981\u662F\u8282\u7701\u6253\u5F00\u6216\u8005\u5173\u95ED\u6570\u636E\u5E93\u8FDE\u63A5\u6240\u5F15\u8D77\u7684\u6548\u7387\u635F\u8017,\u8FD9\u79CD\u6548\u7387\u4E0A\u7684\u635F\u8017\u8FD8\u662F\u975E\u5E38\u6602\u8D35\u7684,\u56E0\u4E3A\u4F55\u7528\u5355\u4F8B\u6A21\u5F0F\u6765\u7EF4\u62A4,\u5C31\u53EF\u4EE5\u5927\u5927\u964D\u4F4E\u8FD9\u79CD\u635F\u8017
f.\u591A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60\u7684\u8BBE\u8BA1\u4E00\u822C\u4E5F\u662F\u91C7\u7528\u5355\u4F8B\u6A21\u5F0F,\u8FD9\u662F\u7531\u4E8E\u7EBF\u7A0B\u6C60\u8981\u65B9\u4FBF\u5BF9\u6C60\u4E2D\u7684\u7EBF\u7A0B\u8FDB\u884C\u63A7\u5236
g.\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6587\u4EF6\u7CFB\u7EDF,\u4E5F\u662F\u5927\u7684\u5355\u4F8B\u6A21\u5F0F\u5B9E\u73B0\u7684\u5177\u4F53\u4F8B\u5B50,\u4E00\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u53EA\u80FD\u6709\u4E00\u4E2A\u6587\u4EF6\u7CFB\u7EDF
</code></pre><h2 id="_4-5-\u4F18\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-5-\u4F18\u7F3A\u70B9" aria-hidden="true">#</a> 4.5.\u4F18\u7F3A\u70B9</h2><h3 id="_4-5-1-\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-5-1-\u4F18\u70B9" aria-hidden="true">#</a> 4.5.1.\u4F18\u70B9</h3><pre><code>a.\u7531\u4E8E\u5355\u4F8B\u6A21\u5F0F\u5728\u5185\u5B58\u4E2D\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B,\u51CF\u5C11\u5185\u5B58\u5F00\u652F,\u7279\u522B\u662F\u4E00\u4E2A\u5BF9\u8C61\u9700\u8981\u9891\u7E41\u5730\u521B\u5EFA\u9500\u6BC1\u65F6,\u800C\u4E14\u521B\u5EFA\u6216\u9500\u6BC1\u65F6\u6027\u80FD\u53C8\u65E0\u6CD5\u4F18\u5316,\u5355\u4F8B\u6A21\u5F0F\u5C31\u975E\u5E38\u660E\u663E\u4E86
b.\u7531\u4E8E\u5355\u4F8B\u6A21\u5F0F\u53EA\u751F\u6210\u4E00\u4E2A\u5B9E\u4F8B,\u6240\u4EE5,\u51CF\u5C11\u7CFB\u7EDF\u7684\u6027\u80FD\u5F00\u9500,\u5F53\u4E00\u4E2A\u5BF9\u8C61\u4EA7\u751F\u9700\u8981\u6BD4\u8F83\u591A\u7684\u8D44\u6E90\u65F6,\u5982\u8BFB\u53D6\u914D\u7F6E,\u4EA7\u751F\u5176\u4ED6\u4F9D\u8D56\u5BF9\u8C61\u65F6,\u5219\u53EF\u4EE5\u901A\u8FC7\u5728\u5E94\u7528\u542F\u52A8\u65F6\u76F4\u63A5\u4EA7\u751F\u4E00\u4E2A\u5355\u4F8B\u5BF9\u8C61,\u7136\u540E\u6C38\u4E45\u9A7B\u7559\u5185\u5B58\u7684\u65B9\u5F0F\u6765\u89E3\u51B3
c.\u5355\u4F8B\u6A21\u5F0F\u53EF\u4EE5\u907F\u514D\u5BF9\u8D44\u6E90\u7684\u591A\u91CD\u5360\u7528,\u4F8B\u5982\u4E00\u4E2A\u5199\u6587\u4EF6\u64CD\u4F5C,\u7531\u4E8E\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B\u5B58\u5728\u5185\u5B58\u4E2D,\u907F\u514D\u5BF9\u540C\u4E00\u4E2A\u8D44\u6E90\u6587\u4EF6\u7684\u540C\u65F6\u5199\u64CD\u4F5C
d.\u5355\u4F8B\u6A21\u5F0F\u53EF\u4EE5\u5728\u7CFB\u7EDF\u8BBE\u7F6E\u5168\u5C40\u7684\u8BBF\u95EE\u70B9,\u4F18\u5316\u548C\u5171\u4EAB\u8D44\u6E90\u8BBF\u95EE,\u4F8B\u5982\uFF0C\u53EF\u4EE5\u8BBE\u8BA1\u4E00\u4E2A\u5355\u4F8B\u7C7B,\u8D1F\u8D23\u6240\u6709\u6570\u636E\u8868\u7684\u6620\u5C04\u5904\u7406
</code></pre><h3 id="_4-5-2-\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-5-2-\u7F3A\u70B9" aria-hidden="true">#</a> 4.5.2.\u7F3A\u70B9</h3><pre><code>a.\u5355\u4F8B\u6A21\u5F0F\u6CA1\u6709\u62BD\u8C61\u5C42,\u6269\u5C55\u5F88\u56F0\u96BE,\u82E5\u8981\u6269\u5C55,\u9664\u4E86\u4FEE\u6539\u4EE3\u7801\u57FA\u672C\u4E0A\u6CA1\u6709\u7B2C\u4E8C\u79CD\u9014\u5F84\u53EF\u4EE5\u5B9E\u73B0,\u8FDD\u53CD\u4E86OCP\u539F\u5219
b.\u5355\u4F8B\u7C7B\u7684\u804C\u8D23\u8FC7\u91CD,\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u8FDD\u80CC\u4E86&quot;\u5355\u4E00\u804C\u8D23\u539F\u5219&quot;
c.\u6EE5\u7528\u5355\u4F8B\u5C06\u5E26\u6765\u4E00\u4E9B\u8D1F\u9762\u95EE\u9898,\u5982:\u4E3A\u4E86\u8282\u7701\u8D44\u6E90\u5C06\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u5BF9\u8C61\u8BBE\u8BA1\u4E3A\u7684\u5355\u4F8B\u7C7B,\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5171\u4EAB\u8FDE\u63A5\u6C60\u5BF9\u8C61\u7684\u7A0B\u5E8F\u8FC7\u591A\u800C\u51FA\u73B0\u8FDE\u63A5\u6C60\u6EA2\u51FA
</code></pre><h2 id="_4-6-\u89D2\u8272\u53CA\u5176\u804C\u8D23" tabindex="-1"><a class="header-anchor" href="#_4-6-\u89D2\u8272\u53CA\u5176\u804C\u8D23" aria-hidden="true">#</a> 4.6.\u89D2\u8272\u53CA\u5176\u804C\u8D23</h2><h2 id="_4-7-\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#_4-7-\u6A21\u578B" aria-hidden="true">#</a> 4.7.\u6A21\u578B</h2><h3 id="_4-7-1-\u6A21\u578B\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-7-1-\u6A21\u578B\u7C7B\u56FE" aria-hidden="true">#</a> 4.7.1.\u6A21\u578B\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,13),m=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),g=t(`<h3 id="_4-7-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-7-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.7.2.\u4EE3\u7801</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton<span class="token punctuation">.</span>model</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonObject</span> SINGLETON_INSTANCE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonObject</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> SINGLETON_INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;do some operate......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="_4-8-\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-\u793A\u4F8B" aria-hidden="true">#</a> 4.8.\u793A\u4F8B</h2><h3 id="_4-8-1-\u997F\u6C49\u5F0F\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-1-\u997F\u6C49\u5F0F\u5355\u4F8B" aria-hidden="true">#</a> 4.8.1.\u997F\u6C49\u5F0F\u5355\u4F8B</h3><h3 id="_4-8-1-1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-1-1-\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.1.1.\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,6),h=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),w=t(`<h3 id="_4-8-1-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-1-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.1.2.\u4EE3\u7801</h3><pre><code>SingletonA.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u997F\u6C49\u5F0F
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonA</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonA</span> SINGLETONA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonA</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> SINGLETONA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u6D4B\u8BD5\u997F\u6C49\u5F0F\u5355\u4F8B
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SingletonA</span> instance1 <span class="token operator">=</span> <span class="token class-name">SingletonA</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">SingletonA</span> instance2 <span class="token operator">=</span> <span class="token class-name">SingletonA</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1 <span class="token operator">==</span> instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance1.hashCode():&quot;</span><span class="token operator">+</span>instance1<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance2.hashCode():&quot;</span><span class="token operator">+</span>instance2<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-8-2-\u61D2\u6C49\u5F0F\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-2-\u61D2\u6C49\u5F0F\u5355\u4F8B" aria-hidden="true">#</a> 4.8.2.\u61D2\u6C49\u5F0F\u5355\u4F8B</h3><h3 id="_4-8-2-1-\u997F\u6C49\u5F0F\u5355\u4F8B\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-2-1-\u997F\u6C49\u5F0F\u5355\u4F8B\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.2.1.\u997F\u6C49\u5F0F\u5355\u4F8B\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,8),y=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),S=t(`<h3 id="_4-8-2-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-2-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.2.2.\u4EE3\u7801</h3><pre><code>SingletonB.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u61D2\u6C49\u5F0F:
 * 	\u4F18\u70B9\uFF1A\u53EF\u4EE5\u5B9E\u73B0\u61D2\u52A0\u8F7D
 * 	\u7F3A\u70B9\uFF1A\u6709\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonB</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SingletonB</span> singletonB <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonB</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>singletonB <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            singletonB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> singletonB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u5355\u7EBF\u7A0B\u6D4B\u8BD5\u61D2\u6C49\u5F0F
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SingletonB</span> instance1 <span class="token operator">=</span> <span class="token class-name">SingletonB</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">SingletonB</span> instance2 <span class="token operator">=</span> <span class="token class-name">SingletonB</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1 <span class="token operator">==</span> instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance1.hashCode():&quot;</span><span class="token operator">+</span>instance1<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance2.hashCode():&quot;</span><span class="token operator">+</span>instance2<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u61D2\u6C49\u5F0F
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> begin <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u5355\u4F8B\u6A21\u5F0F\u7EBF\u7A0B\u662F\u5426\u5B89\u5168</span>
		<span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B</span>
        	threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span>
				<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    			<span class="token annotation punctuation">@Override</span>
	    			<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    				<span class="token class-name">SingletonB</span> instance <span class="token operator">=</span> <span class="token class-name">SingletonB</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance.hashCode():&quot;</span><span class="token operator">+</span>instance<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    			<span class="token punctuation">}</span>
	    		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7EBF\u7A0B\u542F\u52A8</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A0B\u5E8F\u6267\u884C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-8-3-\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-3-\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B" aria-hidden="true">#</a> 4.8.3.\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F\u5355\u4F8B</h3><h3 id="_4-8-3-1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-3-1-\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.3.1.\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,8),A=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),f=t(`<h3 id="_4-8-3-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-3-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.3.2.\u4EE3\u7801</h3><pre><code>SingletonC.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonC</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SingletonC</span> singletonC<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token class-name">SingletonC</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>singletonC <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            singletonC <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> singletonC<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F
	 * 	\u65B9\u6CD5\u7EA7\u522B\u7684\u9501\uFF1A\u5B9E\u6D4B\u6267\u884C\u6548\u7387\u5E76\u4E0D\u662F\u5F88\u4F4E
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> begin <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u5355\u4F8B\u6A21\u5F0F\u7EBF\u7A0B\u662F\u5426\u5B89\u5168</span>
		<span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span>
					<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token annotation punctuation">@Override</span>
						<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token class-name">SingletonC</span> instance <span class="token operator">=</span> <span class="token class-name">SingletonC</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance.hashCode():&quot;</span><span class="token operator">+</span>instance<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7EBF\u7A0B\u542F\u52A8</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A0B\u5E8F\u6267\u884C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-8-4-\u53CC\u91CD\u68C0\u7D22\u61D2\u6C49\u5F0F\u61D2\u6C49\u5F0F\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-4-\u53CC\u91CD\u68C0\u7D22\u61D2\u6C49\u5F0F\u61D2\u6C49\u5F0F\u5355\u4F8B" aria-hidden="true">#</a> 4.8.4.\u53CC\u91CD\u68C0\u7D22\u61D2\u6C49\u5F0F\u61D2\u6C49\u5F0F\u5355\u4F8B</h3><h3 id="_4-8-4-1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-4-1-\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.4.1.\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,8),v=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),_=t(`<h3 id="_4-8-4-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-4-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.4.2.\u4EE3\u7801</h3><pre><code>SingletonD.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u53CC\u91CD\u68C0\u7D22\u61D2\u6C49\u5F0F
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonD</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">SingletonD</span> singletonD<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonD</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>singletonD <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token class-name">SingletonD</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>singletonD <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    singletonD <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> singletonD<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u9759\u6001\u53CC\u91CD\u68C0\u7D22\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F
	 * 	\u65B9\u6CD5\u7EA7\u522B\u7684\u9501\uFF1A\u5B9E\u6D4B\u6267\u884C\u6548\u7387\u5E76\u4E0D\u662F\u5F88\u4F4E
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> begin <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u5355\u4F8B\u6A21\u5F0F\u7EBF\u7A0B\u662F\u5426\u5B89\u5168</span>
		<span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span>
					<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token annotation punctuation">@Override</span>
						<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token class-name">SingletonD</span> instance <span class="token operator">=</span> <span class="token class-name">SingletonD</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance.hashCode():&quot;</span><span class="token operator">+</span>instance<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7EBF\u7A0B\u542F\u52A8</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A0B\u5E8F\u6267\u884C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-8-5-\u9759\u6001\u5185\u90E8\u7C7B\u61D2\u6C49\u5F0F\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-5-\u9759\u6001\u5185\u90E8\u7C7B\u61D2\u6C49\u5F0F\u5355\u4F8B" aria-hidden="true">#</a> 4.8.5.\u9759\u6001\u5185\u90E8\u7C7B\u61D2\u6C49\u5F0F\u5355\u4F8B</h3><h3 id="_4-8-5-1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-5-1-\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.5.1.\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,8),b=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),C=t(`<h3 id="_4-8-5-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-5-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.5.2.\u4EE3\u7801</h3><pre><code>SingletonE.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u9759\u6001\u5185\u90E8\u7C7B\u61D2\u6C49\u5F0F
 * 	\u539F\u7406\uFF1AJVM\u5728\u88C5\u8F7D\u7C7B\u7684\u65F6\u5019\u662F\u7EBF\u7A0B\u5B89\u5168\u7684
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonE</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonE</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SingletonInstacne</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstacne</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonE</span> INSTANCE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u9759\u6001\u5185\u90E8\u7C7B\u7EBF\u7A0B\u5B89\u5168\u7684\u61D2\u6C49\u5F0F
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> begin <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//\u591A\u7EBF\u7A0B\u6D4B\u8BD5\u5355\u4F8B\u6A21\u5F0F\u7EBF\u7A0B\u662F\u5426\u5B89\u5168</span>
		<span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span>
					<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token annotation punctuation">@Override</span>
						<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token class-name">SingletonE</span> instance <span class="token operator">=</span> <span class="token class-name">SingletonE</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance.hashCode():&quot;</span><span class="token operator">+</span>instance<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>threads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7EBF\u7A0B\u542F\u52A8</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A0B\u5E8F\u6267\u884C\u65F6\u95F4\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-8-6-\u679A\u4E3E\u5355\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-6-\u679A\u4E3E\u5355\u4F8B" aria-hidden="true">#</a> 4.8.6.\u679A\u4E3E\u5355\u4F8B</h3><h3 id="_4-8-6-1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-8-6-1-\u7C7B\u56FE" aria-hidden="true">#</a> 4.8.6.1.\u7C7B\u56FE</h3><pre><code>\u7C7B\u56FE(\u6709Client)
</code></pre>`,8),B=a("pre",null,[a("code",null,`\u7C7B\u56FE(\u65E0Client)
`)],-1),j=t(`<h3 id="_4-8-6-2-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-8-6-2-\u4EE3\u7801" aria-hidden="true">#</a> 4.8.6.2.\u4EE3\u7801</h3><pre><code>SingletonF.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u679A\u4E3E\u5B9E\u73B0\u5355\u4F8B
 * <span class="token keyword">@author</span> lingwh
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SingletonF</span> <span class="token punctuation">{</span>
    INSTANCE<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;doSomething......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre></div><pre><code>Client.java
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dragonsoft<span class="token punctuation">.</span>designpattern<span class="token punctuation">.</span>create<span class="token punctuation">.</span>singleton</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
	 * \u6D4B\u8BD5\u679A\u4E3E\u5B9E\u73B0\u5355\u4F8B
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SingletonF</span> instance1 <span class="token operator">=</span> <span class="token class-name">SingletonF</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
		<span class="token class-name">SingletonF</span> instance2 <span class="token operator">=</span> <span class="token class-name">SingletonF</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance1 <span class="token operator">==</span> instance2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance1.hashCode():&quot;</span><span class="token operator">+</span>instance1<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;instance2.hashCode():&quot;</span><span class="token operator">+</span>instance2<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//\u901A\u8FC7\u5355\u4F8B\u8C03\u7528doSomething()</span>
		instance1<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		instance2<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_4-9-\u5728\u5F00\u6E90\u6846\u67B6\u4E2D\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#_4-9-\u5728\u5F00\u6E90\u6846\u67B6\u4E2D\u7684\u5E94\u7528" aria-hidden="true">#</a> 4.9.\u5728\u5F00\u6E90\u6846\u67B6\u4E2D\u7684\u5E94\u7528</h2><pre><code>JDK8#java.lang.Runtime(\u997F\u6C49\u5F0F)
</code></pre><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Runtime</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Runtime</span> currentRuntime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Runtime</span> <span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> currentRuntime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,8);function E(D,T){const o=p("Markmap"),s=p("Mermaid"),e=p("ScrollIntoPageView"),c=p("HideSideBar");return u(),i("div",null,[r,n(o,{localtion:"/enhance/markmap/general/designpattern/designpattern-java/chapter/designpattern-java-outline5-chapter4.html",height:"500rem"}),d,n(s,{id:"mermaid-382ee1a2",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonObject%0A%20%20%20%20class%20SingletonObject%20%7B%0A%20%20%20%20%20%20%20%20-SingletonObject%20instance%0A%20%20%20%20%20%20%20%20-SingletonObject()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%20SingletonObject%0A%20%20%20%20%20%20%20%20%2Boperate()%20void%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A"}),m,n(s,{id:"mermaid-382ee1a4",code:"classDiagram%0A%20%20%20%20class%20SingletonObject%20%7B%0A%20%20%20%20%20%20%20%20-SingletonObject%20instance%0A%20%20%20%20%20%20%20%20-SingletonObject()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%20SingletonObject%0A%20%20%20%20%20%20%20%20%2Boperate()%20void%0A%20%20%20%20%7D%0A"}),g,n(s,{id:"mermaid-382ee1c8",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonA%0A%20%20%20%20class%20SingletonA%20%7B%0A%20%20%20%20%20%20%20%20-SingletonA%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonA()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonA%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A"}),h,n(s,{id:"mermaid-382ee1ca",code:"classDiagram%0A%20%20%20%20class%20SingletonA%20%7B%0A%20%20%20%20%20%20%20%20-SingletonA%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonA()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonA%0A%20%20%20%20%7D%0A"}),w,n(s,{id:"mermaid-382ee203",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonB%0A%20%20%20%20class%20SingletonB%20%7B%0A%20%20%20%20%20%20%20%20-SingletonB%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonB()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonB%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun1()%20void%0A%20%20%20%20%20%20%20%20%2Bfun2()%20void%0A%20%20%20%20%7D%0A"}),y,n(s,{id:"mermaid-382ee205",code:"classDiagram%0A%20%20%20%20class%20SingletonB%20%7B%0A%20%20%20%20%20%20%20%20-SingletonB%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonB()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonB%0A%20%20%20%20%7D%0A"}),S,n(s,{id:"mermaid-382ee23e",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonC%0A%20%20%20%20class%20SingletonC%20%7B%0A%20%20%20%20%20%20%20%20-SingletonC%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonC()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonC%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A"}),A,n(s,{id:"mermaid-382ee240",code:"classDiagram%0A%20%20%20%20class%20SingletonC%20%7B%0A%20%20%20%20%20%20%20%20-SingletonC%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonC()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonC%0A%20%20%20%20%7D%0A"}),f,n(s,{id:"mermaid-64a570da",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonD%0A%20%20%20%20class%20SingletonD%20%7B%0A%20%20%20%20%20%20%20%20-SingletonD%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonD()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonD%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A"}),v,n(s,{id:"mermaid-64a570ac",code:"classDiagram%0A%20%20%20%20class%20SingletonD%20%7B%0A%20%20%20%20%20%20%20%20-SingletonD%20SINGLETONA%24%0A%20%20%20%20%20%20%20%20-SingletonD()%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonD%0A%20%20%20%20%7D%0A"}),_,n(s,{id:"mermaid-64a57064",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonE%0A%20%20%20%20SingletonE%20*--%20SingletonInstacne%20%3A%E5%86%85%E9%83%A8%E7%B1%BB%0A%20%20%20%20class%20SingletonE%20%7B%0A%20%20%20%20%20%20%20%20-SingletonE%20SINGLETONA%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonE%0A%20%20%20%20%7D%0A%20%20%20%20class%20SingletonInstacne%20%7B%0A%20%20%20%20%20%20%20%20-SingletonE%20INSTANCE%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A"}),b,n(s,{id:"mermaid-64a57060",code:"classDiagram%0A%20%20%20%20SingletonE%20*--%20SingletonInstacne%20%3A%E5%86%85%E9%83%A8%E7%B1%BB%0A%20%20%20%20class%20SingletonE%20%7B%0A%20%20%20%20%20%20%20%20-SingletonE%20SINGLETONA%0A%20%20%20%20%20%20%20%20%2BgetInstance()%24%20SingletonE%0A%20%20%20%20%7D%0A%20%20%20%20class%20SingletonInstacne%20%7B%0A%20%20%20%20%20%20%20%20-SingletonE%20INSTANCE%0A%20%20%20%20%7D%0A"}),C,n(s,{id:"mermaid-64a56fee",code:"classDiagram%0A%20%20%20%20Client%20..%3E%20SingletonF%0A%20%20%20%20class%20SingletonF%20%7B%0A%20%20%20%20%20%20%20%20INSTANCE%0A%20%20%20%20%20%20%20%20%2BdoSomething()%20void%0A%20%20%20%20%7D%0A%20%20%20%20class%20Client%20%7B%0A%20%20%20%20%20%20%20%20%2Bfun()%20void%0A%20%20%20%20%7D%0A%20%20%20%20%3C%3Cenumeration%3E%3E%20SingletonF%0A"}),B,n(s,{id:"mermaid-64a56fea",code:"classDiagram%0A%20%20%20%20class%20SingletonF%20%7B%0A%20%20%20%20%20%20%20%20INSTANCE%0A%20%20%20%20%20%20%20%20%2BdoSomething()%20void%0A%20%20%20%20%7D%0A%20%20%20%20%3C%3Cenumeration%3E%3E%20SingletonF%0A"}),j,n(e),n(c)])}var N=l(k,[["render",E],["__file","designpattern-java-chapter-4.\u521B\u5EFA\u578B\u6A21\u5F0F-\u5355\u4F8B\u6A21\u5F0F.html.vue"]]);export{N as default};
